name: Required Checks

# This workflow enforces code quality checks that MUST pass before merging
# to main. These checks prevent broken code from entering the main branch.

on:
  pull_request:
    branches:
      - main
      - master
  push:
    branches:
      - main
      - master

# Require all jobs to pass
jobs:
  # Job 1: TypeScript Type Checking
  typecheck:
    name: TypeScript Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run TypeScript type check
        run: npm run typecheck
        
      - name: Fail on any type errors
        if: failure()
        run: |
          echo "❌ TypeScript compilation failed. Fix all type errors before merging."
          exit 1

  # Job 2: ESLint
  lint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run ESLint
        run: npm run lint -- --max-warnings=14
        
      - name: Fail on linting errors
        if: failure()
        run: |
          echo "❌ ESLint found errors. Fix all linting errors before merging."
          exit 1

  # Job 3: Tests
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test -- --coverage --watchAll=false
        
      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always() && secrets.CODECOV_TOKEN
        continue-on-error: true
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          fail_ci_if_error: false

  # Job 4: Build Verification
  build:
    name: Build Verification
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build project
        run: npm run build
        
      - name: Fail on build errors
        if: failure()
        run: |
          echo "❌ Build failed. Fix all build errors before merging."
          exit 1

  # Job 5: Dependency Audit
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true
        
      - name: Check for high/critical vulnerabilities
        run: npm audit --audit-level=high

  # Summary job - requires all checks to pass
  all-checks-passed:
    name: All Checks Passed
    runs-on: ubuntu-latest
    needs: [typecheck, lint, test, build, security]
    if: always()
    steps:
      - name: Check all jobs succeeded
        run: |
          if [ "${{ needs.typecheck.result }}" != "success" ] || \
             [ "${{ needs.lint.result }}" != "success" ] || \
             [ "${{ needs.test.result }}" != "success" ] || \
             [ "${{ needs.build.result }}" != "success" ] || \
             [ "${{ needs.security.result }}" != "success" ]; then
            echo "❌ One or more required checks failed."
            echo "TypeCheck: ${{ needs.typecheck.result }}"
            echo "Lint: ${{ needs.lint.result }}"
            echo "Test: ${{ needs.test.result }}"
            echo "Build: ${{ needs.build.result }}"
            echo "Security: ${{ needs.security.result }}"
            exit 1
          fi
          echo "✅ All required checks passed!"
