name: PR Guard (forbidden paths)

on:
  pull_request:
    branches: [ main, develop ]

jobs:
  guard:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect forbidden path changes
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            forbidden:
              - ".github/**"
              - "**/*.env"
              - ".env*"
              - "**/secrets/**"

      - name: Allow restoration PR or enforce maintainer override
        if: steps.filter.outputs.forbidden == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const labels = pr.labels?.map(l => l.name) ?? [];
            const actor = context.actor;
            const branchName = pr.head.ref;
            const allowedActors = ['pixel-pilot', 'Vibe-coding-nvm-delete-repo']; // repo owner/maintainer
            const hasOverride = labels.includes('maintainer-override');
            const isRestoration = branchName.includes('restore-clean-main') || branchName.includes('fix/restore');
            
            if (hasOverride || allowedActors.includes(actor) || isRestoration) {
              if (isRestoration) {
                core.notice('Main restoration PR - .github changes allowed for merge conflict prevention system.');
              } else {
                core.notice('Forbidden paths changed but maintainer override present or actor allowed.');
              }
            } else {
              core.setFailed('Forbidden paths changed without maintainer override label or maintainer actor.');
            }